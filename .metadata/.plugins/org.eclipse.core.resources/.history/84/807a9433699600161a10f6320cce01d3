import java.io.*;
import java.util.*;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class Solution {

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        String text = getOnlyStrings(scanner.nextLine());
        int k = Integer.parseInt(scanner.nextLine());
        List<String> tokens = new ArrayList<String>(); 
        for (int i = 0; i < k; i++) {
            tokens.add(scanner.nextLine());
        }
        String[] wordArray = text.split("\\s+");
        List<String> wordList = Arrays.asList(wordArray);
        Map<String, Integer> map = new HashMap<String, Integer>();
        for (int i = 1; i <= tokens.size(); i++) {
            map.put(tokens.get(i-1).toUpperCase(), i);
        }
        Set<Integer> set = new HashSet<Integer>();
        int startPos = 0;// starting word
        int endPos = 0; // ending word
        for (int i = 0; i < wordList.size(); i++) {
            startPos = i;
            if (map.containsKey(wordList.get(i).toUpperCase())) {
                set.add(map.get(wordList.get(i).toUpperCase()));
            } else {
                if (set.size() != k) {
                    set.clear();
                } else {
                    endPos = i - 1;
                    break;
                }
            }
        }
        StringBuilder builder = new StringBuilder();
        for (int i = 0; i < wordList.size(); i++) {
            if (i >= startPos && i <= endPos) {
                builder.append(wordList.get(i));
                if (i != endPos) {
                    builder.append(" ");
                }
            }
        }
        System.out.println(builder.toString());
    }
    
    public static String getOnlyDigits(String s) {
        Pattern pattern = Pattern.compile("[^0-9]");
        Matcher matcher = pattern.matcher(s);
        String number = matcher.replaceAll("");
        return number;
     }
     public static String getOnlyStrings(String s) {
        Pattern pattern = Pattern.compile("[^a-z A-Z]");
        Matcher matcher = pattern.matcher(s);
        String text = matcher.replaceAll("");
        return text;
     }
}